(function() {var implementors = {};
implementors["sptir"] = [{"text":"impl RefUnwindSafe for ColorMatrix3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for xyY","synthetic":true,"types":[]},{"text":"impl&lt;FROM, TO&gt; RefUnwindSafe for Adaptation&lt;FROM, TO&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;FROM: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;TO: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;CS&gt; RefUnwindSafe for RGBColor&lt;CS&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CS: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;CS&gt; RefUnwindSafe for RGBAColor&lt;CS&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CS: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RGBPrimaries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ACES_AP0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ACES_AP1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SRGB","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Film","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Matrix4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Point3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transform3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Vector3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sample1D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sample2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IndependentSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleDimension1D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleDimension2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DSeries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PiecewiseLinearSpectrum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpectralRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpectralWavelengths","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpectralRadiance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpectralReflectance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpectralFlux","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XYZSpectrum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Aggregate","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()