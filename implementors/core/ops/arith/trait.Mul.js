(function() {var implementors = {};
implementors["sptir"] = [{"text":"impl&lt;CS:&nbsp;Colorspace&gt; Mul&lt;RGBColor&lt;CS&gt;&gt; for RGBColor&lt;CS&gt;","synthetic":false,"types":[]},{"text":"impl&lt;CS:&nbsp;Colorspace&gt; Mul&lt;f32&gt; for RGBColor&lt;CS&gt;","synthetic":false,"types":[]},{"text":"impl Mul&lt;Matrix4&gt; for Matrix4","synthetic":false,"types":[]},{"text":"impl Mul&lt;f32&gt; for Matrix4","synthetic":false,"types":[]},{"text":"impl Mul&lt;Point3&gt; for Matrix4","synthetic":false,"types":[]},{"text":"impl Mul&lt;Vector3&gt; for Matrix4","synthetic":false,"types":[]},{"text":"impl Mul&lt;Transform3&gt; for Transform3","synthetic":false,"types":[]},{"text":"impl Mul&lt;f32&gt; for Vector3","synthetic":false,"types":[]},{"text":"impl Mul&lt;f32&gt; for SpectralRadiance","synthetic":false,"types":[]},{"text":"impl Mul&lt;SpectralReflectance&gt; for SpectralReflectance","synthetic":false,"types":[]},{"text":"impl Mul&lt;SpectralReflectance&gt; for SpectralFlux","synthetic":false,"types":[]},{"text":"impl Mul&lt;f32&gt; for SpectralFlux","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()