(function() {var implementors = {};
implementors["sptir"] = [{"text":"impl StructuralPartialEq for ColorMatrix3","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for xyY","synthetic":false,"types":[]},{"text":"impl&lt;CS:&nbsp;Colorspace&gt; StructuralPartialEq for RGBColor&lt;CS&gt;","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for RGBPrimaries","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Matrix4","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Point3","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Ray","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Transform3","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Vector3","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Sample1D","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for Sample2D","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SampleDimension1D","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SampleDimension2D","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SpectralWavelengthSamples","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SpectralFlux","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for XYZSpectrum","synthetic":false,"types":[]},{"text":"impl StructuralPartialEq for SpectralRange","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()