(function() {var implementors = {};
implementors["sptir"] = [{"text":"impl Freeze for ColorMatrix3","synthetic":true,"types":[]},{"text":"impl Freeze for xyY","synthetic":true,"types":[]},{"text":"impl&lt;FROM, TO&gt; Freeze for Adaptation&lt;FROM, TO&gt;","synthetic":true,"types":[]},{"text":"impl&lt;CS&gt; Freeze for RGBColor&lt;CS&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for RGBPrimaries","synthetic":true,"types":[]},{"text":"impl Freeze for ACES_AP0","synthetic":true,"types":[]},{"text":"impl Freeze for ACES_AP1","synthetic":true,"types":[]},{"text":"impl Freeze for SRGB","synthetic":true,"types":[]},{"text":"impl Freeze for Film","synthetic":true,"types":[]},{"text":"impl Freeze for Matrix4","synthetic":true,"types":[]},{"text":"impl Freeze for Vector3","synthetic":true,"types":[]},{"text":"impl Freeze for SpectralWavelengthSamples","synthetic":true,"types":[]},{"text":"impl Freeze for SpectralRadiance","synthetic":true,"types":[]},{"text":"impl Freeze for SpectralFlux","synthetic":true,"types":[]},{"text":"impl Freeze for SpectralReflectance","synthetic":true,"types":[]},{"text":"impl Freeze for XYZSpectrum","synthetic":true,"types":[]},{"text":"impl Freeze for SpectralRange","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()